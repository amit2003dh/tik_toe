{"version":3,"sources":["Rules/index.js","App.js","index.js"],"names":["Rules","_jsx","className","children","Popup","modal","trigger","type","close","_jsxs","onClick","RiCloseLine","alt","src","choicesList","id","imageUrl","scoreList","App","_Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","state","score","isplaying","playerChoice","opponentChoice","currentScore","tocheckscore","onplayerChoice","e","console","log","Math","floor","random","scoretoincrease","setState","prev","playAgain","_inherits","_createClass","key","value","_this2","_this$state","this","Component","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.415e721d.chunk.js","sourcesContent":["import {RiCloseLine} from 'react-icons/ri'\nimport Popup from 'reactjs-popup'\nimport './index.css'\n\nconst Rules = () => (\n  <div className=\"popup-container\">\n    <Popup\n      modal\n      trigger={\n        <div className=\"rules_button_div\">\n          <div className=\"rules_button_div_a\">\n            <button type=\"button\" className=\"rules-button\">\n              RULES\n            </button>\n          </div>\n        </div>\n      }\n    >\n      {close => (\n        <div className=\"pop_container\">\n          <div className=\"pop_container_1\">\n            <button\n              type=\"button\"\n              className=\"close-button\"\n              onClick={() => close()}\n            >\n              <RiCloseLine />\n            </button>\n          </div>\n          <div className=\"rules_image_div\">\n            <img\n              className=\"rules_img\"\n              alt=\"rules\"\n              src=\"https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/rules-image.png \"\n            />\n          </div>\n        </div>\n      )}\n    </Popup>\n  </div>\n)\nexport default Rules\n","import './App.css'\nimport {Component} from 'react'\nimport Rules from './Rules'\n\nconst choicesList = [\n  {\n    id: 'ROCK',\n    imageUrl:\n      'https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/rock-image.png',\n  },\n  {\n    id: 'SCISSORS',\n    imageUrl:\n      'https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/scissor-image.png',\n  },\n  {\n    id: 'PAPER',\n    imageUrl:\n      'https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/paper-image.png',\n  },\n]\n\nconst scoreList = ['YOU LOSE', 'IT IS DRAW', 'YOU WON']\n\nclass App extends Component {\n  state = {\n    score: 0,\n    isplaying: true,\n    playerChoice: '',\n    opponentChoice: '',\n    currentScore: '',\n  }\n\n  tocheckscore = (playerChoice, opponentChoice) => {\n    if (playerChoice === 0) {\n      if (opponentChoice === 2) {\n        return -1\n      }\n      if (opponentChoice === 1) {\n        return 1\n      }\n      return 0\n    }\n    if (playerChoice === 1) {\n      if (opponentChoice === 0) {\n        return -1\n      }\n      if (opponentChoice === 2) {\n        return 1\n      }\n      return 0\n    }\n    if (opponentChoice === 0) {\n      return 1\n    }\n    if (opponentChoice === 1) {\n      return -1\n    }\n    return 0\n  }\n\n  onplayerChoice = e => {\n    const playerChoice = e\n    console.log(e)\n    const opponentChoice = Math.floor(Math.random() * 3)\n\n    const scoretoincrease = this.tocheckscore(playerChoice, opponentChoice)\n    console.log(playerChoice, opponentChoice, scoretoincrease)\n    this.setState(prev => ({\n      isplaying: !prev.isplaying,\n      score: prev.score + scoretoincrease,\n      playerChoice,\n      opponentChoice,\n      currentScore: scoretoincrease,\n    }))\n  }\n\n  playAgain = () => {\n    this.setState({isplaying: true})\n  }\n\n  render() {\n    const {\n      score,\n      isplaying,\n      playerChoice,\n      opponentChoice,\n      currentScore,\n    } = this.state\n    return (\n      <div className=\"main_container\">\n        <div className=\"result_div\">\n          <div className=\"names_div\">\n            <h1 className=\"main_heading\">\n              ROCK\n              <br /> PAPER\n              <br /> SCISSORS\n            </h1>\n          </div>\n          <div className=\"score_div\">\n            <p className=\"score\">Score</p>\n            <p className=\"score_p\">{score}</p>\n          </div>\n        </div>\n        {isplaying ? (\n          <div className=\"playing_container\">\n            <div className=\"playing_buttons_div\">\n              <div className=\"playing_buttons_div_a\">\n                <div className=\"button_div\">\n                  <button\n                    value=\"0\"\n                    type=\"button\"\n                    className=\"rockButton\"\n                    data-testid=\"rockButton\"\n                    onClick={() => this.onplayerChoice(0)}\n                  >\n                    <img\n                      value=\"0\"\n                      alt={choicesList[0].id}\n                      src={choicesList[0].imageUrl}\n                    />\n                  </button>\n                </div>\n                <div className=\"button_div\">\n                  <button\n                    value=\"1\"\n                    type=\"button\"\n                    className=\"rockButton\"\n                    data-testid=\"scissorsButton\"\n                    onClick={() => this.onplayerChoice(1)}\n                  >\n                    <img\n                      alt={choicesList[1].id}\n                      src={choicesList[1].imageUrl}\n                    />\n                  </button>\n                </div>\n              </div>\n              <div className=\"playing_buttons_div_b\">\n                <div className=\"button_div\">\n                  <button\n                    value=\"2\"\n                    type=\"button\"\n                    className=\"rockButton\"\n                    data-testid=\"paperButton\"\n                    onClick={() => this.onplayerChoice(2)}\n                  >\n                    <img\n                      alt={choicesList[2].id}\n                      src={choicesList[2].imageUrl}\n                    />\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"result_view\">\n            <div className=\"result_view_1\">\n              <div className=\"result_view_1_1\">\n                <h1 className=\"you\">YOU</h1>\n                <img\n                  alt=\"your choice\"\n                  src={choicesList[playerChoice].imageUrl}\n                />\n              </div>\n              <div className=\"result_view_1_1\">\n                <h1 className=\"you\">OPPONENT</h1>\n                <img\n                  alt=\"opponent choice\"\n                  src={choicesList[opponentChoice].imageUrl}\n                />\n              </div>\n            </div>\n            <p className=\"result\">{scoreList[currentScore + 1]}</p>\n            <div className=\"playagain\">\n              <button\n                type=\"button\"\n                className=\"playagain_button\"\n                onClick={this.playAgain}\n              >\n                PLAY AGAIN\n              </button>\n            </div>\n          </div>\n        )}\n        <Rules />\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}